<project name="Cellolution" default="dist" basedir=".">
	<description>
	  
	Ant build file for Cellolution
	
	To build: 
		ant						in directory cellollution, where the file build.xml exists
		ant clean				cleanup the build fileset
		
	results are in the dist and build directories
		
	</description>
	
	<!-- set the global properties for this build -->
	
	<property name="appname" value="Cellolution"/>
	<property name="appdesc" value="Cellolution - a simulated evolution of cells and organisms in an artificial ocean"/>
	<property name="repo" value="https://github.com/openworld42/Cellolution"/>
	<property name="mainclass" value="cellolution.Main"/>
	<property name="jarprefix" value="cellolution"/>
	
	<property name="src" location="src"/>
	<property name="dir.src" value="src"/>
	<property name="build" location="build"/>
	<property name="dist" location="dist"/>
	<property name="base" location="."/>
	<property name="javadoc" location="javadoc"/>
	<property name="dir.javadoc" value="javadoc"/>
	<property name="json.jar" value="json-simple-1.1.1.jar"/>
  
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>
		<echo>
			appname: ${appname}
			appdesc: ${appdesc}
			repo: ${repo}
			mainclass: ${mainclass}
			jarprefix: ${jarprefix} + "Vn.n.n.jar"
		</echo>
		<input message="Please enter the version (as of Version.java, like v1.2.3): "
			addproperty="version"/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}"/>
	</target>

	<target name="compile" depends="init"
		description="compile the source">
		<!-- Compile the Java code from ${src} into ${build} -->
		<javac srcdir="${src}" 
			destdir="${build}" 
		    classpath="${json.jar}"
			includeantruntime="false"
		/>
	</target>

	<target name="javadoc" depends="compile" description="generate javadoc">
		<delete dir="${javadoc}" />
		<mkdir dir="${javadoc}" />
		<javadoc destdir="${javadoc}" access="private" author="true" classpath="." nodeprecated="false" nodeprecatedlist="false" noindex="false" nonavbar="false" notree="false" 
				sourcepath="${src}" splitindex="true" use="true" version="true">
			<doctitle><![CDATA[${appdesc}]]></doctitle>
			<bottom>
				<![CDATA[Copyright Â© 2021. All Rights Reserved. Read the license file(s) enclosed. ]]>
			</bottom>
			<link href="https://docs.oracle.com/en/java/javase/17/docs/api/"/>
			<classpath>
				<fileset dir=".">
					<include name="${json.jar}"/>
				</fileset>
			</classpath>
		</javadoc>
	</target>

	<target name="dist" depends="compile,javadoc"
		description="generate the distribution">
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}"/>

		<!-- Put everything in ${build} into the Project-${DSTAMP}.jar file -->
 		<jar jarfile="${dist}/${jarprefix}${version}.jar" basedir="${build}">
			<fileset file="${base}/README*"/>
			<fileset file="${base}/LICENSE*"/>
			<fileset file="${base}/CHANGELOG.md"/>
			<fileset file="${base}/build.xml"/>
			<fileset file="${base}/${json.jar}"/>
			<fileset dir="." includes="${dir.src}/**"/>
			<fileset dir="." includes="${dir.javadoc}/**"/>
			<manifest>
				<attribute name="Main-Class" value="${mainclass}"/>
				<attribute name="Implementation-Version"  value="${version}"/>   
      			<attribute name="Built-Date" value="${DSTAMP}"/>        
				<attribute name="Implementation-URL" value="${repo}"/>
				<attribute name="Class-Path" value="${json.jar}"/>

				<!--
				<section name="${appname}">
					<attribute name="Version" value="${version}"/>
					<attribute name="Build date" value="${DSTAMP}"/>
					<attribute name="Repository" value="${repo}"/>
				</section>
				 -->
			</manifest>
		</jar>

		<copy file="${dist}/${jarprefix}_${version}.jar" tofile="${base}/${jarprefix}_${version}.jar"/>
		<echo>
			check the file cellolution${version}.jar
			then run: ant clean
		</echo>
	</target>
	
	<target name="clean"
		description="clean up">
	    <!-- Delete the ${build} and ${dist} directory trees -->
	<delete dir="${build}"/>
	<delete dir="${dist}"/>
	</target>
</project>
